%% The Function reads the Rates from the Rate Coefficients Files generated by CoarseAIR
%
%  Input Global Var: - Temp.TNowChar
%                    - Syst.HDF5_File
%
function Read_Rates()    

    %%==============================================================================================================
    % 
    % Coarse-Grained method for Quasi-Classical Trajectories (CG-QCT) 
    % 
    % Copyright (C) 2018 Simone Venturi and Bruno Lopez (University of Illinois at Urbana-Champaign). 
    %
    % Based on "VVTC" (Vectorized Variable stepsize Trajectory Code) by David Schwenke (NASA Ames Research Center). 
    % 
    % This program is free software; you can redistribute it and/or modify it under the terms of the 
    % Version 2.1 GNU Lesser General Public License as published by the Free Software Foundation. 
    % 
    % This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
    % without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
    % See the GNU Lesser General Public License for more details. 
    % 
    % You should have received a copy of the GNU Lesser General Public License along with this library; 
    % if not, write to the Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA 
    % 
    %---------------------------------------------------------------------------------------------------------------
    %%==============================================================================================================
    
    global Input Rates Syst Temp
  
    
    iMol    = Syst.Pair(1).ToMol;
    jMol    = Syst.Pair(6).ToMol;
    iNBins  = Syst.Molecule(iMol).EqNStatesIn;
    jNBins  = Syst.Molecule(iMol).EqNStatesIn;    
    
    
    Rates.T(Temp.iT).Diss     = zeros(iNBins, jNBins, 4);
    Rates.T(Temp.iT).DissInel = zeros(iNBins, jNBins, iNBins, Syst.NMolecules+6);
    Rates.T(Temp.iT).Inel     = zeros(iNBins, jNBins, iNBins, jNBins);
    Rates.T(Temp.iT).Exch     = zeros(iNBins, jNBins, iNBins, jNBins);

    
    if strcmp(Input.Kin.RateSource, 'HDF5')
        
        Read_Rates_FromHDF5();
    
    elseif strcmp(Input.Kin.RateSource, 'PLATO')
        
        Read_Rates_FromPLATO();
        
    elseif strcmp(Input.Kin.RateSource, 'CoarseAIR')
        
        Read_Rates_FromCoarseAIR() 
   
    end
    

end